(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){e.exports=a(29)},17:function(e,t,a){},19:function(e,t,a){e.exports=a.p+"static/media/logo.5d5d9eef.svg"},20:function(e,t,a){},29:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),i=a(7),o=a.n(i),l=(a(17),a(1)),s=a(2),c=a(4),m=a(3),u=a(5),d=(a(19),a(20),function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{className:"fullHeight"},r.a.createElement("center",{className:"center_vert"},r.a.createElement("div",{className:"backgroundHighlight"},r.a.createElement("h1",null,"Marc Leonard")),r.a.createElement("div",{className:"subHeading"},"full stack developer",r.a.createElement("div",null,"+"),"likes art")))}}]),t}(n.Component)),h=a(6),p=a.n(h);Object(h.configureAnchors)({offset:-160,scrollDuration:200});var g=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e.window="",e.y="",e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){this.window=window;var e=0,t=document.getElementById("nav_bar"),a=t.offsetTop;this.window.addEventListener("scroll",function(n){var r=function(){if(void 0!=window.pageYOffset)return[window.pageXOffset,window.pageYOffset];var e,t,a=document,n=a.documentElement,r=a.body;return e=n.scrollLeft||r.scrollLeft||0,t=n.scrollTop||r.scrollTop||0,this.y=t,{x:e,y:t}}();e=r[1];var i=this.document.getElementById("nav_bar");a<e?(t.classList.add("sticky"),i.style.height="50px"):(t.classList.remove("sticky"),i.style.height="0px")})}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("nav",{id:"nav_bar"},r.a.createElement("ul",{className:"nav backgroundNav"},r.a.createElement("li",null,r.a.createElement("a",{href:"#about",className:"active"},"About")),r.a.createElement("li",null,r.a.createElement("a",{href:"#currently"},"Currently")),r.a.createElement("li",null,r.a.createElement("a",{href:"#projects"},"Projects")),r.a.createElement("li",null,r.a.createElement("a",{href:"https://github.com/marcrleonard",target:"_blank"},"Github")))))}}]),t}(n.Component),f=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{className:"about"},r.a.createElement(p.a,{id:"about"},r.a.createElement("center",{className:""},r.a.createElement("h2",null,"About"),r.a.createElement("p",null,"After working as a filmmaker for over a decade, I learned to code. Oddly enough, software tickles my engineering-analytical side, as well as my creative side. Projects that most interest me revolve around video or have interactive elements. I live in Bozeman, Montana."))))}}]),t}(n.Component),v=a(11),b=a.n(v),y=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).onChange=function(t){t?(console.log("Element is now ".concat(t?"visible":"hidden")),"right"===e.props.side&&e.setState({animationClass:"slideLeft"}),"left"===e.props.side&&e.setState({animationClass:"slideRight"})):(console.log("Element is now ".concat(t?"visible":"hidden")),"right"===e.props.side&&e.setState({animationClass:"slideLeftReverse"}),"left"===e.props.side&&e.setState({animationClass:"slideRightReverse"}))},e.state={name:"Project Name!!",animationClass:"asd",imageSide:""},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){"right"===this.props.side&&this.setState({imageSide:"rightImage"}),"left"===this.props.side&&this.setState({imageSide:"leftImage"})}},{key:"render",value:function(){var e=this.props.project,t=[],a=r.a.createElement("div",{className:"projectHalf"},r.a.createElement("h3",null,e.name),r.a.createElement("div",null,r.a.createElement("p",{className:"backgroundHighlight thickWeight"},e.tags)),r.a.createElement("div",{className:"desc"},r.a.createElement("p",null,e.full_desc)),r.a.createElement("div",{className:"projectLink"},r.a.createElement("a",{href:"https://".concat(e.links)},e.links))),n=r.a.createElement("div",{className:"projectHalf img_container projectImage ".concat(this.state.animationClass," ").concat(this.state.imageSide),style:{backgroundImage:"url(".concat(e.full_media,")")}});return"right"===this.props.side&&(t.push(a),t.push(n)),"left"===this.props.side&&(t.push(n),t.push(a)),r.a.createElement(b.a,{onChange:this.onChange,partialVisibility:!0,offset:{bottom:200}},r.a.createElement("div",{className:"".concat(this.props.side," clear")},t))}}]),t}(n.Component),_=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){var e={name:"PixelStrings",tags:"PaaS",short_desc:"QD",full_desc:r.a.createElement(r.a.Fragment,null,"Currently, I am a core backend developer of PixelStrings, a platform by ",r.a.createElement("a",{href:"https://cinnafilm.com"},"Cinnafilm"),". ",r.a.createElement("a",{className:"projectLink",href:"http://pixelstrings.com"}," PixelStrings")," specializes cloud video processing and delivery. My job is two fold - automating the allocation and orchestration cloud compute resources for processing and delivery, and creating APIs to enable different type of video conversion formats. These services are accessed by the front end UI, as well as our public API."),technologies:["python"],full_media:"img/pxs_screenshot.jpg",links:["pixelstrings.com"]};return r.a.createElement("div",{className:"currently"},r.a.createElement(p.a,{id:"currently"},r.a.createElement("center",null,r.a.createElement("h2",null,"Currently"),r.a.createElement("div",null,r.a.createElement(y,{className:"clear",key:e.name.toString(),side:"left",project:e})))))}}]),t}(n.Component),E=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e.side="right",e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){for(var e=[{name:"ArtStream",tags:"Webapp",short_desc:"QD",full_desc:"ArtStream is a platform for artists to showcase their work via the ArtStream channel on Roku. I created the\n          infrastructure and APIs to take a piece of artwork a user uploaded, and delivery it in video form with 'Ken Burns' style animations applied.",technologies:["python","javascript","MySQL","ImageMagik","Digital Ocean","PIL","FFMPEG"],full_media:"img/asv_screenshot.jpg",links:["artstreamvideos.com"]},{name:"ImageToVideo",tags:"Library",short_desc:"QD",full_desc:"I created this to make a batteries included way to make an image into a video. ImageToVideo uses OpenCV/Numpy as a 'middle man'. It handles any zoom, resize, rotate functions (and eventually will power the plugin extensibility). All encoding is done via FFMPEG. Included in the class is a simple progress monitoring API. In the future, I will be adding other imaging libraries. I have preliminary versions of using Pillow and Pyvips.",technologies:["FFMPEG","PIL","Numpy","OpenCV"],links:["github.com/marcrleonard/ImageToVideo"],full_media:"img/ImageToVideo.png",code:"from ImageToVideo import ImageToVideo\n  \n  image_video = ImageToVideo(\n      \"test_image_sm.jpg\", # input image\n      1920,                # output width\n      1080,                # output height\n      2,                   # output clip duration (seconds)\n      24,                  # fps\n      image_lib='cv'       # image library\n  )\n  \n  render_thread = threading.Thread(target=image_video.Render)\n  render_thread.start()\n  \n  render_status = ''\n  prev_percentage = 0\n  \n  while render_status != 'done':\n      percentage_complete = int(image_video.percent_complete() * 100)\n      render_status = image_video.render_status\n      if percentage_complete != prev_percentage:\n          print('{}% {}fps {} Remaining'.format(percentage_complete,\n                                                  image_video.render_fps, image_video.render_estimated_seconds_remaining))\n      time.sleep(1)\n  \n  # output ...\n  \n  >>> 10% 5.81fps 0:00:07 Remaining\n  >>> 50% 5.7fps 0:00:02 Remaining\n  >>> 100% 5.24fps 0:00:00 Remaining\n  >>> Render Complete. 0.1884527666666667 minutes\n  "},{name:"SimpleTimeOffset",tags:"Library",short_desc:"QD",full_desc:"\n          This library provides a very simple way to add hour offsets to a given input time.While doing an iot project with micro python, I found that an internet connected device will get the correct time, but micropython would not give you the ability to add a timezone.So if you know(or figure out) the proper hourly offset, you can use this library to get the correct time.It has no dependencies(except the new_time method, so you can easily use in micro python.This does not do any other 'fancy' calculations like daylight savings time.",technologies:["micropython","python","esp8266"],full_media:"img/timeOffset.png",links:["github.com/marcrleonard/SimpleTimeOffset"],code:"\n  from SimpleTimeOffset import SimpleTimeOffset\n  \n  current_time = (2017, 10, 27, 10, 39, 23, 4, 300)\n  \n  time_set = SimpleTimeOffset(start_time=current_time)\n  offset_hours = 26\n  time_set.offset_hours(offset_hours)\n  \n  print('Offset   {}'.format(offset_hours))\n  print('Original {}:{:02d}:{:02d}'.format(time_set.hour_current, time_set.minute_current, time_set.second_current))\n  print('New      {}:{:02d}:{:02d}'.format(time_set.hour_new, time_set.minute_current, time_set.second_current))\n  print('Offset   {} Days, {} Hours'.format(time_set.day_offset, time_set.hour_remainder))\n  \n  # output\n  \n  >>> Offset   26\n  >>> Original 10:39:23\n  >>> New      12:39:23\n  >>> Offset   1 Days, 2 Hours"},{name:"Photobooth",tags:"Application",short_desc:"QD",full_desc:'I created this app to use at my wedding. It was run on a Raspberry Pi, computer screen and a Canon 60d. Resulting photobooth image "strips" are texted to the subject!',technologies:["RaspberryPi","Twilio","Tkinter","FFMPEG","ImageMagik","gphoto2","python"],full_media:"img/photobooth_sm_l.jpg",links:["github.com/marcrleonard/Photobooth"]},{name:"Plotter",tags:"Art",short_desc:"QD",bg_img:"img/topo_bg.svg",full_desc:"Like the photobooth above, I love taking the digital and making it physical. Recently, I've been exploring making art with code. In this image, I created a topo map of the mountain where I proposed to my wife.\n        Then, used a pen plotter to draw it.",technologies:["python","Inkscape","Plotter"],full_media:"img/plotter.jpg",links:[]}],t="right",a=[],n=0;n<e.length;n++){var i=e[n];a.push(r.a.createElement(y,{className:"clear",key:i.name.toString(),side:t,project:i})),t="right"==t?"left":"right"}return r.a.createElement("div",null,a)}}]),t}(n.Component),j=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return r.a.createElement(p.a,{id:"projects"},r.a.createElement("div",null,r.a.createElement("center",null,r.a.createElement("h2",null,"Projects"),r.a.createElement(E,null))))}}]),t}(n.Component),O=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{className:"clear"},r.a.createElement("ul",{className:"backgroundHighlight nav whiteText"},r.a.createElement("li",null,r.a.createElement("a",{rel:"nofollow",href:"javascript:decryptEmail('bWFyYy5yLmxlb25hcmRAZ21haWwuY29t');"},"Email!")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",href:"https://instagram.com/marcrleonard"},"Instagram!")),r.a.createElement("li",null,r.a.createElement("a",{target:"_blank",href:"http://marcrleonard.com"},"More great stuff!"))),r.a.createElement("p",null,"Copyright (c) 2018 Marc Leonard - All rights reserved"))}}]),t}(n.Component),w=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(c.a)(this,Object(m.a)(t).call(this))).state={},e}return Object(u.a)(t,e),Object(s.a)(t,[{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("div",{className:"container"},r.a.createElement(d,null)),r.a.createElement(g,null),r.a.createElement("div",{className:"container"},r.a.createElement(f,{name:"about"}),r.a.createElement(_,{name:"currently"}),r.a.createElement(j,null),r.a.createElement(O,null)))}}]),t}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(w,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[12,2,1]]]);
//# sourceMappingURL=main.d1d085bb.chunk.js.map